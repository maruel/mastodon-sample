# Copyright 2022 Marc-Antoine Ruel. All rights reserved.
# Use of this source code is governed under the Apache License, Version 2.0
# that can be found in the LICENSE file.

# Doc: https://docs.joinmastodon.org/admin/scaling/

version: '3'
services:
  db:
    # https://hub.docker.com/_/postgres/tags
    container_name: mastodon_db
    hostname: db
    image: postgres:15.0-alpine3.16
    env_file: database.env
    restart: always
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    # https://hub.docker.com/_/redis/tags
    container_name: mastodon_redis
    hostname: redis
    image: redis:7.0.5-alpine3.16
    restart: always
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  web:
    # https://hub.docker.com/r/tootsuite/mastodon/tags
    container_name: mastodon_web
    image: tootsuite/mastodon:v4.0.2
    restart: always
    env_file:
      - application.env
      - database.env
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      - db
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    # https://hub.docker.com/r/tootsuite/mastodon/tags
    container_name: mastodon_streaming
    image: tootsuite/mastodon:v4.0.2
    restart: always
    env_file:
      - application.env
      - database.env
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      - db
      - redis

  sidekiq:
    # https://hub.docker.com/r/tootsuite/mastodon/tags
    container_name: mastodon_sidekiq
    image: tootsuite/mastodon:v4.0.2
    restart: always
    env_file:
      - application.env
      - database.env
    command: bundle exec sidekiq -c 4
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]


  shell:
    # https://hub.docker.com/r/tootsuite/mastodon/tags
    container_name: mastodon_shell
    image: tootsuite/mastodon:v4.0.2
    env_file: 
      - application.env
      - database.env
    command: /bin/bash
    restart: "no"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./public/system:/mastodon/public/system

networks:
  external_network:
  internal_network:
    internal: true
